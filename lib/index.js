'use strict';

const skygearCloud = require('skygear/cloud');
const { DEVELOPMENT_MODE, DEVELOPMENT_TEAM_ID } = require('./config');
const { handleOAuth, handleCommand, handleAction, handleEvent } = require('./handlers');
const { distributeScheduledSurvey } = require('./tasks');

/**
 * Check availability after a git push
 */
skygearCloud.handler('ping', req => 'Hello, world\n', {
  method: ['GET'],
  userRequired: false
});

/**
 * Test any new feature here
 */
skygearCloud.handler('dev', req => {}, {
  method: ['GET'],
  userRequired: false
});

skygearCloud.handler('oauth', handleOAuth, {
  method: ['GET'],
  userRequired: false
});

skygearCloud.handler('command', handleCommand, {
  method: ['POST'],
  userRequired: false
});

skygearCloud.handler('action', handleAction, {
  method: ['POST'],
  userRequired: false
});

skygearCloud.handler('event', handleEvent, {
  method: ['POST'],
  userRequired: false
});

skygearCloud.every(DEVELOPMENT_MODE && DEVELOPMENT_TEAM_ID ? '@every 30s' : '@weekly', distributeScheduledSurvey.bind(null, 'weekly'));

skygearCloud.every(DEVELOPMENT_MODE && DEVELOPMENT_TEAM_ID ? '@every 40s' : '@monthly', distributeScheduledSurvey.bind(null, 'monthly'));

skygearCloud.every(DEVELOPMENT_MODE && DEVELOPMENT_TEAM_ID ? '@every 50s' : '0 0 0 1 */3 *', distributeScheduledSurvey.bind(null, 'quarterly'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJza3lnZWFyQ2xvdWQiLCJyZXF1aXJlIiwiREVWRUxPUE1FTlRfTU9ERSIsIkRFVkVMT1BNRU5UX1RFQU1fSUQiLCJoYW5kbGVPQXV0aCIsImhhbmRsZUNvbW1hbmQiLCJoYW5kbGVBY3Rpb24iLCJoYW5kbGVFdmVudCIsImRpc3RyaWJ1dGVTY2hlZHVsZWRTdXJ2ZXkiLCJoYW5kbGVyIiwicmVxIiwibWV0aG9kIiwidXNlclJlcXVpcmVkIiwiZXZlcnkiLCJiaW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLGVBQWVDLFFBQVEsZUFBUixDQUFyQjtBQUNBLE1BQU0sRUFBRUMsZ0JBQUYsRUFBb0JDLG1CQUFwQixLQUE0Q0YsUUFBUSxVQUFSLENBQWxEO0FBQ0EsTUFBTSxFQUFFRyxXQUFGLEVBQWVDLGFBQWYsRUFBOEJDLFlBQTlCLEVBQTRDQyxXQUE1QyxLQUE0RE4sUUFBUSxZQUFSLENBQWxFO0FBQ0EsTUFBTSxFQUFFTyx5QkFBRixLQUFnQ1AsUUFBUSxTQUFSLENBQXRDOztBQUVBOzs7QUFHQUQsYUFBYVMsT0FBYixDQUFxQixNQUFyQixFQUE2QkMsT0FBTyxnQkFBcEMsRUFBc0Q7QUFDcERDLFVBQVEsQ0FBQyxLQUFELENBRDRDO0FBRXBEQyxnQkFBYztBQUZzQyxDQUF0RDs7QUFLQTs7O0FBR0FaLGFBQWFTLE9BQWIsQ0FBcUIsS0FBckIsRUFBNEJDLE9BQU8sQ0FFbEMsQ0FGRCxFQUVHO0FBQ0RDLFVBQVEsQ0FBQyxLQUFELENBRFA7QUFFREMsZ0JBQWM7QUFGYixDQUZIOztBQU9BWixhQUFhUyxPQUFiLENBQXFCLE9BQXJCLEVBQThCTCxXQUE5QixFQUEyQztBQUN6Q08sVUFBUSxDQUFDLEtBQUQsQ0FEaUM7QUFFekNDLGdCQUFjO0FBRjJCLENBQTNDOztBQUtBWixhQUFhUyxPQUFiLENBQXFCLFNBQXJCLEVBQWdDSixhQUFoQyxFQUErQztBQUM3Q00sVUFBUSxDQUFDLE1BQUQsQ0FEcUM7QUFFN0NDLGdCQUFjO0FBRitCLENBQS9DOztBQUtBWixhQUFhUyxPQUFiLENBQXFCLFFBQXJCLEVBQStCSCxZQUEvQixFQUE2QztBQUMzQ0ssVUFBUSxDQUFDLE1BQUQsQ0FEbUM7QUFFM0NDLGdCQUFjO0FBRjZCLENBQTdDOztBQUtBWixhQUFhUyxPQUFiLENBQXFCLE9BQXJCLEVBQThCRixXQUE5QixFQUEyQztBQUN6Q0ksVUFBUSxDQUFDLE1BQUQsQ0FEaUM7QUFFekNDLGdCQUFjO0FBRjJCLENBQTNDOztBQUtBWixhQUFhYSxLQUFiLENBQW1CWCxvQkFBb0JDLG1CQUFwQixHQUEwQyxZQUExQyxHQUF5RCxTQUE1RSxFQUF1RkssMEJBQTBCTSxJQUExQixDQUErQixJQUEvQixFQUFxQyxRQUFyQyxDQUF2Rjs7QUFFQWQsYUFBYWEsS0FBYixDQUFtQlgsb0JBQW9CQyxtQkFBcEIsR0FBMEMsWUFBMUMsR0FBeUQsVUFBNUUsRUFBd0ZLLDBCQUEwQk0sSUFBMUIsQ0FBK0IsSUFBL0IsRUFBcUMsU0FBckMsQ0FBeEY7O0FBRUFkLGFBQWFhLEtBQWIsQ0FBbUJYLG9CQUFvQkMsbUJBQXBCLEdBQTBDLFlBQTFDLEdBQXlELGVBQTVFLEVBQTZGSywwQkFBMEJNLElBQTFCLENBQStCLElBQS9CLEVBQXFDLFdBQXJDLENBQTdGIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2t5Z2VhckNsb3VkID0gcmVxdWlyZSgnc2t5Z2Vhci9jbG91ZCcpXG5jb25zdCB7IERFVkVMT1BNRU5UX01PREUsIERFVkVMT1BNRU5UX1RFQU1fSUQgfSA9IHJlcXVpcmUoJy4vY29uZmlnJylcbmNvbnN0IHsgaGFuZGxlT0F1dGgsIGhhbmRsZUNvbW1hbmQsIGhhbmRsZUFjdGlvbiwgaGFuZGxlRXZlbnQgfSA9IHJlcXVpcmUoJy4vaGFuZGxlcnMnKVxuY29uc3QgeyBkaXN0cmlidXRlU2NoZWR1bGVkU3VydmV5IH0gPSByZXF1aXJlKCcuL3Rhc2tzJylcblxuLyoqXG4gKiBDaGVjayBhdmFpbGFiaWxpdHkgYWZ0ZXIgYSBnaXQgcHVzaFxuICovXG5za3lnZWFyQ2xvdWQuaGFuZGxlcigncGluZycsIHJlcSA9PiAnSGVsbG8sIHdvcmxkXFxuJywge1xuICBtZXRob2Q6IFsnR0VUJ10sXG4gIHVzZXJSZXF1aXJlZDogZmFsc2Vcbn0pXG5cbi8qKlxuICogVGVzdCBhbnkgbmV3IGZlYXR1cmUgaGVyZVxuICovXG5za3lnZWFyQ2xvdWQuaGFuZGxlcignZGV2JywgcmVxID0+IHtcblxufSwge1xuICBtZXRob2Q6IFsnR0VUJ10sXG4gIHVzZXJSZXF1aXJlZDogZmFsc2Vcbn0pXG5cbnNreWdlYXJDbG91ZC5oYW5kbGVyKCdvYXV0aCcsIGhhbmRsZU9BdXRoLCB7XG4gIG1ldGhvZDogWydHRVQnXSxcbiAgdXNlclJlcXVpcmVkOiBmYWxzZVxufSlcblxuc2t5Z2VhckNsb3VkLmhhbmRsZXIoJ2NvbW1hbmQnLCBoYW5kbGVDb21tYW5kLCB7XG4gIG1ldGhvZDogWydQT1NUJ10sXG4gIHVzZXJSZXF1aXJlZDogZmFsc2Vcbn0pXG5cbnNreWdlYXJDbG91ZC5oYW5kbGVyKCdhY3Rpb24nLCBoYW5kbGVBY3Rpb24sIHtcbiAgbWV0aG9kOiBbJ1BPU1QnXSxcbiAgdXNlclJlcXVpcmVkOiBmYWxzZVxufSlcblxuc2t5Z2VhckNsb3VkLmhhbmRsZXIoJ2V2ZW50JywgaGFuZGxlRXZlbnQsIHtcbiAgbWV0aG9kOiBbJ1BPU1QnXSxcbiAgdXNlclJlcXVpcmVkOiBmYWxzZVxufSlcblxuc2t5Z2VhckNsb3VkLmV2ZXJ5KERFVkVMT1BNRU5UX01PREUgJiYgREVWRUxPUE1FTlRfVEVBTV9JRCA/ICdAZXZlcnkgMzBzJyA6ICdAd2Vla2x5JywgZGlzdHJpYnV0ZVNjaGVkdWxlZFN1cnZleS5iaW5kKG51bGwsICd3ZWVrbHknKSlcblxuc2t5Z2VhckNsb3VkLmV2ZXJ5KERFVkVMT1BNRU5UX01PREUgJiYgREVWRUxPUE1FTlRfVEVBTV9JRCA/ICdAZXZlcnkgNDBzJyA6ICdAbW9udGhseScsIGRpc3RyaWJ1dGVTY2hlZHVsZWRTdXJ2ZXkuYmluZChudWxsLCAnbW9udGhseScpKVxuXG5za3lnZWFyQ2xvdWQuZXZlcnkoREVWRUxPUE1FTlRfTU9ERSAmJiBERVZFTE9QTUVOVF9URUFNX0lEID8gJ0BldmVyeSA1MHMnIDogJzAgMCAwIDEgKi8zIConLCBkaXN0cmlidXRlU2NoZWR1bGVkU3VydmV5LmJpbmQobnVsbCwgJ3F1YXJ0ZXJseScpKVxuIl19