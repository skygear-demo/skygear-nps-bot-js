'use strict';

const moment = require('moment');
const util = require('util');
const { VERIFICATION_TOKEN } = require('./config');

/**
 * @see https://nodejs.org/api/util.html#util_util_inspect_object_options
 */
exports.log = any => {
  console.log(util.inspect(any, { depth: null }));
  return any;
};

exports.extractIDs = array => array.map(element => element.id);

/**
 * @see https://docs.skygear.io/guides/cloud-function/http-endpoint/js/#examples
 * mimic JSON.parse
 */
exports.Form = class {
  static parse(req) {
    return new Promise((resolve, reject) => {
      req.form((formError, fields) => {
        if (formError) {
          reject(formError);
        }
        resolve(fields);
      });
    });
  }
};

/**
 * @see https://api.slack.com/docs/token-types#verification
 */
exports.verify = token => token === VERIFICATION_TOKEN;

exports.toLocalDate = date => {
  if (moment.isMoment(date) || moment.isDate(date)) {
    if (!moment.isMoment(date)) {
      date = moment(date);
    }
    return `<!date^${date.unix()}^{date_num}|${moment(date).format()}>`;
  } else {
    throw new Error('Invalid date');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsLmpzIl0sIm5hbWVzIjpbIm1vbWVudCIsInJlcXVpcmUiLCJ1dGlsIiwiVkVSSUZJQ0FUSU9OX1RPS0VOIiwiZXhwb3J0cyIsImxvZyIsImFueSIsImNvbnNvbGUiLCJpbnNwZWN0IiwiZGVwdGgiLCJleHRyYWN0SURzIiwiYXJyYXkiLCJtYXAiLCJlbGVtZW50IiwiaWQiLCJGb3JtIiwicGFyc2UiLCJyZXEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZvcm0iLCJmb3JtRXJyb3IiLCJmaWVsZHMiLCJ2ZXJpZnkiLCJ0b2tlbiIsInRvTG9jYWxEYXRlIiwiZGF0ZSIsImlzTW9tZW50IiwiaXNEYXRlIiwidW5peCIsImZvcm1hdCIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLFNBQVNDLFFBQVEsUUFBUixDQUFmO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNLEVBQUVFLGtCQUFGLEtBQXlCRixRQUFRLFVBQVIsQ0FBL0I7O0FBRUE7OztBQUdBRyxRQUFRQyxHQUFSLEdBQWNDLE9BQU87QUFDbkJDLFVBQVFGLEdBQVIsQ0FBWUgsS0FBS00sT0FBTCxDQUFhRixHQUFiLEVBQWtCLEVBQUVHLE9BQU8sSUFBVCxFQUFsQixDQUFaO0FBQ0EsU0FBT0gsR0FBUDtBQUNELENBSEQ7O0FBS0FGLFFBQVFNLFVBQVIsR0FBcUJDLFNBQVNBLE1BQU1DLEdBQU4sQ0FBVUMsV0FBV0EsUUFBUUMsRUFBN0IsQ0FBOUI7O0FBRUE7Ozs7QUFJQVYsUUFBUVcsSUFBUixHQUFlLE1BQU07QUFDbkIsU0FBT0MsS0FBUCxDQUFjQyxHQUFkLEVBQW1CO0FBQ2pCLFdBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q0gsVUFBSUksSUFBSixDQUFTLENBQUNDLFNBQUQsRUFBWUMsTUFBWixLQUF1QjtBQUM5QixZQUFJRCxTQUFKLEVBQWU7QUFDYkYsaUJBQU9FLFNBQVA7QUFDRDtBQUNESCxnQkFBUUksTUFBUjtBQUNELE9BTEQ7QUFNRCxLQVBNLENBQVA7QUFRRDtBQVZrQixDQUFyQjs7QUFhQTs7O0FBR0FuQixRQUFRb0IsTUFBUixHQUFpQkMsU0FBU0EsVUFBVXRCLGtCQUFwQzs7QUFFQUMsUUFBUXNCLFdBQVIsR0FBc0JDLFFBQVE7QUFDNUIsTUFBSTNCLE9BQU80QixRQUFQLENBQWdCRCxJQUFoQixLQUF5QjNCLE9BQU82QixNQUFQLENBQWNGLElBQWQsQ0FBN0IsRUFBa0Q7QUFDaEQsUUFBSSxDQUFDM0IsT0FBTzRCLFFBQVAsQ0FBZ0JELElBQWhCLENBQUwsRUFBNEI7QUFDMUJBLGFBQU8zQixPQUFPMkIsSUFBUCxDQUFQO0FBQ0Q7QUFDRCxXQUFRLFVBQVNBLEtBQUtHLElBQUwsRUFBWSxlQUFjOUIsT0FBTzJCLElBQVAsRUFBYUksTUFBYixFQUFzQixHQUFqRTtBQUNELEdBTEQsTUFLTztBQUNMLFVBQU0sSUFBSUMsS0FBSixDQUFVLGNBQVYsQ0FBTjtBQUNEO0FBQ0YsQ0FURCIsImZpbGUiOiJ1dGlsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50JylcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbmNvbnN0IHsgVkVSSUZJQ0FUSU9OX1RPS0VOIH0gPSByZXF1aXJlKCcuL2NvbmZpZycpXG5cbi8qKlxuICogQHNlZSBodHRwczovL25vZGVqcy5vcmcvYXBpL3V0aWwuaHRtbCN1dGlsX3V0aWxfaW5zcGVjdF9vYmplY3Rfb3B0aW9uc1xuICovXG5leHBvcnRzLmxvZyA9IGFueSA9PiB7XG4gIGNvbnNvbGUubG9nKHV0aWwuaW5zcGVjdChhbnksIHsgZGVwdGg6IG51bGwgfSkpXG4gIHJldHVybiBhbnlcbn1cblxuZXhwb3J0cy5leHRyYWN0SURzID0gYXJyYXkgPT4gYXJyYXkubWFwKGVsZW1lbnQgPT4gZWxlbWVudC5pZClcblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZG9jcy5za3lnZWFyLmlvL2d1aWRlcy9jbG91ZC1mdW5jdGlvbi9odHRwLWVuZHBvaW50L2pzLyNleGFtcGxlc1xuICogbWltaWMgSlNPTi5wYXJzZVxuICovXG5leHBvcnRzLkZvcm0gPSBjbGFzcyB7XG4gIHN0YXRpYyBwYXJzZSAocmVxKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHJlcS5mb3JtKChmb3JtRXJyb3IsIGZpZWxkcykgPT4ge1xuICAgICAgICBpZiAoZm9ybUVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGZvcm1FcnJvcilcbiAgICAgICAgfVxuICAgICAgICByZXNvbHZlKGZpZWxkcylcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuXG4vKipcbiAqIEBzZWUgaHR0cHM6Ly9hcGkuc2xhY2suY29tL2RvY3MvdG9rZW4tdHlwZXMjdmVyaWZpY2F0aW9uXG4gKi9cbmV4cG9ydHMudmVyaWZ5ID0gdG9rZW4gPT4gdG9rZW4gPT09IFZFUklGSUNBVElPTl9UT0tFTlxuXG5leHBvcnRzLnRvTG9jYWxEYXRlID0gZGF0ZSA9PiB7XG4gIGlmIChtb21lbnQuaXNNb21lbnQoZGF0ZSkgfHwgbW9tZW50LmlzRGF0ZShkYXRlKSkge1xuICAgIGlmICghbW9tZW50LmlzTW9tZW50KGRhdGUpKSB7XG4gICAgICBkYXRlID0gbW9tZW50KGRhdGUpXG4gICAgfVxuICAgIHJldHVybiBgPCFkYXRlXiR7ZGF0ZS51bml4KCl9XntkYXRlX251bX18JHttb21lbnQoZGF0ZSkuZm9ybWF0KCl9PmBcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZGF0ZScpXG4gIH1cbn1cbiJdfQ==